(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{433:function(t,i,r){"use strict";r.r(i);var v=r(7),_=Object(v.a)({},(function(){var t=this,i=t.$createElement,r=t._self._c||i;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"一、常用命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、常用命令"}},[t._v("#")]),t._v(" 一、常用命令：")]),t._v(" "),r("ul",[r("li",[t._v("mkdir XX：创建一个空目录 XX指目录名")]),t._v(" "),r("li",[t._v("pwd：显示当前目录的路径")]),t._v(" "),r("li",[t._v("cat xx：查看xx文件内容")]),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git init：把当前的目录变成可以管理的git仓库，生成隐藏的.git文件夹")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git add xx：把xx文件添加到暂存区")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git commit -m “xx”：提交文件 -m后面的是注释，必须写！")])],1),t._v(" "),r("li",[t._v("git status：查看仓库状态")]),t._v(" "),r("li",[t._v("git log：查看历史记录")]),t._v(" "),r("li",[t._v("git reset --hard HEAD^：往上回退一个版本")]),t._v(" "),r("li",[t._v("git reflog：查看历史记录的版本号id")]),t._v(" "),r("li",[t._v("git checkout -- xx：把xx文件在工作区的修改全部撤销")]),t._v(" "),r("li",[t._v("git rm xx：删除xx文件")]),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git remote add origin https://github.com/xxxxx/a.git 关联一个远程库")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git push -u（第一次尽量加上-u，以后不用）origin master：把当前master分支推送到远程库")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git clone https://github.com/xxxxx   从远程库中克隆")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git checkout -b dev：创建dev分支 并切换到dev分支上")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git branch：查看当前所有的分支")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git checkout master：切换回master分支")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git merge dev：在当前分支合并dev分支")])],1),t._v(" "),r("li",[t._v("git branch -d dev：删除dev分支")]),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git branch xxx：创建分支xxx")])],1),t._v(" "),r("li",[t._v("git remote：查看远程库信息")]),t._v(" "),r("li",[t._v("git remote -v查看远程库的详细信息")]),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git pull origin master 将远程库的更新拉取到本地并自动合并")])],1),t._v(" "),r("li",[r("font",{attrs:{color:"red"}},[t._v("git push origin master：git会把master分支推送到远程库对应的分支上")])],1)]),t._v(" "),r("h2",{attrs:{id:"二-github远程仓库的使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-github远程仓库的使用"}},[t._v("#")]),t._v(" 二. GitHub远程仓库的使用")]),t._v(" "),r("h3",{attrs:{id:"场景一-关联-本地有仓库-要和远程仓库做关联"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#场景一-关联-本地有仓库-要和远程仓库做关联"}},[t._v("#")]),t._v(" 场景一（关联）：本地有仓库，要和远程仓库做关联")]),t._v(" "),r("ul",[r("li",[t._v("git init")]),t._v(" "),r("li",[t._v("git add .")]),t._v(" "),r("li",[t._v("git commit -m “first commit”")]),t._v(" "),r("li",[t._v("在GitHub上创建一个远程仓库")]),t._v(" "),r("li",[t._v("git remote add origin https://github.com/xpromise/oa.git (HTTPS)")]),t._v(" "),r("li",[t._v("备注：如果此步关联错了，解决办法如下。")]),t._v(" "),r("li",[t._v("暴力解决：删除.git文件夹，重新建立本地仓库。")]),t._v(" "),r("li",[t._v("优雅解决：git remote remove origin，再在重新关联仓库")])]),t._v(" "),r("h3",{attrs:{id:"场景二-推送-本地有仓库有内容-要推送给远程库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#场景二-推送-本地有仓库有内容-要推送给远程库"}},[t._v("#")]),t._v(" 场景二（推送）：本地有仓库有内容，要推送给远程库")]),t._v(" "),r("ul",[r("li",[t._v("git push -u origin master （首次加-u）")]),t._v(" "),r("li",[t._v("根据提示输入用户名密码")]),t._v(" "),r("li",[t._v("我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送到远程新的master分支，还会把本地master分支和远程的master分支关联起来，在以后的推送时可以简化命令git push origin master。")]),t._v(" "),r("li",[t._v("备注：正常情况下，成功推送一次后，电脑会记住和账号与密码，下次推送时不会再提示输入。若在电脑不能够自动记住github的账户和密码，需执行以下命令解决：git config --global credential.helper store")])]),t._v(" "),r("h3",{attrs:{id:"场景三-拉取-本地有仓库有内容-获取远程库新内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#场景三-拉取-本地有仓库有内容-获取远程库新内容"}},[t._v("#")]),t._v(" 场景三（拉取）：本地有仓库有内容，获取远程库新内容")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("第一种拉取方式：git pull origin master，")]),t._v(" "),r("p",[t._v("将远程仓库的master分支上代码版本复制/合并到本地master分支上")])]),t._v(" "),r("li",[r("p",[t._v("第二种拉取方式：git fetch origin master:tmp")]),t._v(" "),r("p",[t._v("新建一个tmp分支，将远程仓库的master分支上代码版本复制到tmp分支上，不会自动合并。")])])]),t._v(" "),r("h3",{attrs:{id:"场景四-克隆-本地无仓库-要获取一个完整的远程库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#场景四-克隆-本地无仓库-要获取一个完整的远程库"}},[t._v("#")]),t._v(" 场景四（克隆）：本地无仓库，要获取一个完整的远程库")]),t._v(" "),r("p",[t._v("备注：只在第一次获取远程库时才需要克隆")]),t._v(" "),r("ul",[r("li",[t._v("git clone https://github.com/xxx.git (HTTPS)")])])])}),[],!1,null,null,null);i.default=_.exports}}]);